<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:Proyecto.Controls"
             xmlns:viewModels="clr-namespace:Proyecto.ViewModels"
             x:Class="Proyecto.Views.SpacesPage"
             NavigationPage.HasNavigationBar="False"
             BackgroundColor="White">

    <!-- Definir recursos y conversores -->
    <ContentPage.Resources>
        <ResourceDictionary>
            <!-- Conversor de ocupación a color o imagen -->
            <local:OccupiedColorConverter x:Key="OccupiedToColorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <!-- Binding del ViewModel -->
    <ContentPage.BindingContext>
        <viewModels:ParkingSpacesViewModel />
    </ContentPage.BindingContext>

    <Grid>
        <StackLayout>
            <!-- Título -->
            <Label Text="Aparcamiento 😍"
                   FontSize="35"
                   HorizontalOptions="Center"
                   Margin="0,30"
                   FontAttributes="Bold"
                   TextColor="Black" />

            <!-- CollectionView con los espacios de aparcamiento -->
            <CollectionView ItemsSource="{Binding ParkingSpaces}"
                            Margin="20,0"
                            ItemsLayout="VerticalGrid, 2">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <!-- Contenedor para mostrar imagen o botón -->
                        <Grid>
                            <!-- Imagen del carro si el espacio está ocupado o reservado -->
                            <Image Source="carro.webp"
                                   WidthRequest="50"
                                   HeightRequest="50"
                                   HorizontalOptions="Center"
                                   VerticalOptions="Center">
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding Estado}"
                                                 Value="ocupado">
                                        <Setter Property="IsVisible" Value="True" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding Estado}"
                                                 Value="reservado">
                                        <Setter Property="IsVisible" Value="True" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding Estado}"
                                                 Value="disponible">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>

                            <!-- Botón si el espacio está disponible -->
                            <Button Text="{Binding SpaceName}"
                                    BackgroundColor="{Binding Estado, Converter={StaticResource OccupiedToColorConverter}}"
                                    TextColor="White"
                                    FontSize="12"
                                    FontAttributes="Bold"
                                    Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:ParkingSpacesViewModel}}, Path=CheckAndNavigateCommand}"
                                    CommandParameter="{Binding .}"
                                    Margin="10,10"
                                    CornerRadius="12"
                                    HeightRequest="70"
                                    IsVisible="True">
                                <Button.Triggers>
                                    <DataTrigger TargetType="Button"
                                                 Binding="{Binding Estado}"
                                                 Value="ocupado">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Button"
                                                 Binding="{Binding Estado}"
                                                 Value="reservado">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Button"
                                                 Binding="{Binding Estado}"
                                                 Value="disponible">
                                        <Setter Property="IsVisible" Value="True" />
                                    </DataTrigger>
                                </Button.Triggers>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </StackLayout>
    </Grid>
</ContentPage>
